apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: authelia
  namespace: authelia
  annotations:
    nginx.ingress.kubernetes.io/enable-global-auth: "false"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      # https://www.authelia.com/docs/security/measures.html
      add_header Cache-Control "no-store";
      add_header Pragma "no-cache";
      add_header X-Frame-Options "SAMEORIGIN";
      add_header X-XSS-Protection "1; mode=block";
spec:
  rules:
    - host: auth.hortafcul.pt
      http:
        paths:
          - backend:
              serviceName: authelia
              servicePort: 80
            path: /

---
apiVersion: v1
kind: Service
metadata:
  name: authelia
  namespace: authelia
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: authelia
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authelia
  namespace: authelia
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authelia
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: authelia
    spec:
      securityContext:
        runAsUser:  4000
        runAsGroup: 4000
        fsGroup:    4000
      containers:
        - image: authelia/authelia:4.27.4
          name: authelia
          ports:
            - containerPort: 8080
              name: authelia
          livenessProbe:
            httpGet:
              path: /api/health
              port: authelia
          volumeMounts:
            - name: config
              mountPath: /config
            - name: persist
              mountPath: /persist

      volumes:
        - name: config
          configMap:
            name: authelia-config
        - name: persist
          persistentVolumeClaim:
            claimName: authelia-persist
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: authelia-persist
  namespace: authelia
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
